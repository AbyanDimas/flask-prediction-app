version: '3.8'

services:
  # Flask Application
  web:
    build: .
    container_name: house-price-predictor
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=False
      - SECRET_KEY=your-secret-key-change-in-production
    volumes:
      - ./app/models:/app/app/models  # Persist trained models
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network

  # Development version with hot reload
  web-dev:
    build: .
    container_name: house-price-predictor-dev
    ports:
      - "5001:5000"
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=True
      - SECRET_KEY=dev-secret-key
    volumes:
      - .:/app
      - /app/__pycache__
    command: python app.py
    restart: unless-stopped
    networks:
      - app-network
    profiles:
      - development

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: house-price-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web
    restart: unless-stopped
    networks:
      - app-network
    profiles:
      - production

networks:
  app-network:
    driver: bridge

volumes:
  model_data:
    driver: local

